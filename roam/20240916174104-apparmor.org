:PROPERTIES:
:ID:       ae006e35-647d-4e8d-9b71-85ff017c2cec
:END:
#+title: AppArmor
#+date: [2024-09-16 Mon 17:41]
#+startup: overview

- linux kernel security module
  - a piece of code that can be loaded into the Linux kernel to extend its functionality without the need to reboot the system.

- supplements the traditional Unix [[https://en.wikipedia.org/wiki/Discretionary_access_control][discretionary access control]] (DAC)
  - based on identity of /subjects/ and/or /groups/

- implemented using [[*\[\[https://en.wikipedia.org/wiki/Linux_Security_Modules\]\[Linux Security Modules\]\]][Linux Security Modules]]

* Key Features of AppArmor:

1. *Provides [[https://en.wikipedia.org/wiki/Mandatory_access_control][Mandatory Access control]] (MAC):* Unlike traditional Discretionary Access Control (DAC), AppArmor enforces restrictions on even superusers (root), based on predefined policies.
   - constrains *subject* (process or thread) to access or modify *objects* (files, dirs, TCP/UDP ports, shared memory segments, IODevices)
   - centrally controlled by a /policy administrator/
   - garantied to be enforced on all users
   - supplements the traditional Unix [[https://en.wikipedia.org/wiki/Discretionary_access_control][discretionary access control]] (DAC)
     - DAC: restrain access based on identity or group that a user belongs to
     - DAC: allows users the ability to make policy decisions or assign security attributes.

2. *Per-program Profiles:* Each program can have its own specific profile, detailing the permitted and denied actions. This allows policies to be tailored to the needs and risks of individual applications.

   - allow capabilities like network-access, raw socket access and permissions to read, write, execute files on matching paths,
   - Each file specifies the allowable behaviors and resource access for that specific application.
   - These profiles are usually stored in the =/etc/apparmor.d/= directory, with each profile named after the application it governs.
   - For instance, a profile for the =/usr/bin/evince= program might be stored as =/etc/apparmor.d/usr.bin.evince=.
   - Each profile outlines which files and capabilities the application can access, effectively constraining it within defined security boundaries.

3. *Path-based Controls:* AppArmor uses path-based access control, managing permissions based on file paths, which is more intuitive and simpler to configure than some other MAC systems.

4. *Ease of Use:* Profiles can be generated automatically in "learning" mode (complain mode), and administrators can create and manage profiles with relative ease.

* learning mode
- profile violations are logged but not prevented
- generate AppArmor profile, based on program's typical behavior

* [[id:94c35248-4a61-4fc5-9ea2-89247376febe][what is the key difference between MAC and DAC?]]
