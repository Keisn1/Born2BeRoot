:PROPERTIES:
:ID:       b9dfb26d-d8db-4481-b578-fc7c2c475842
:END:
#+title: my_evaluation
#+date: [2024-11-21 Do 18:28]
#+startup: overview

* General
- [ ] check that signature.txt file is present
- [ ] check that the signature equals matches signature of .vdi that is being evaluated
  - get the signature in sha1sum format ([[id:08fa09d2-0013-47d1-8ff6-092fb08941df][Verifying authenticity]])
    #+begin_src shell
sha1sum vm.vdi
    #+end_src
  - maybe compare directly (adding vm.vdi) after the hash
    #+begin_src shell
sha1sum -c signature.txt
    #+end_src
- may duplicate virtual machine to keep a copy
* Mandatory
** DONE Project overview
- [X] basic functioning of the [[id:3215f99f-5524-4986-9fc7-58eb820d946c][virtual machine]]
  - [X] what is a [[id:3215f99f-5524-4986-9fc7-58eb820d946c][virtual machine]]
    - [X] What are the [[id:b9fe227c-3dfa-4397-a06a-1bc6f141d1b7][benefits of virtual machines]]
  - [X] What is a [[id:7b33a4a9-c577-4885-ab9c-3710818f8e0e][VirtualBox]]?
  - [X] Why did you choose Debian/Rocky ([[id:2cc4639c-594b-43ea-bdb8-b00fb07643c3][Differences between Centos and Debian and Rocky]])
    - [X] Rocky
      - [X] explain SELinux and DNF
    - [X] Debian
      - [X] difference between [[id:b52d3445-d59d-4d43-bc92-3e9a70e5afe3][apt]] and [[id:b52d3445-d59d-4d43-bc92-3e9a70e5afe3][aptitude]]
      - [X] what is [[id:ae006e35-647d-4e8d-9b71-85ff017c2cec][AppArmor]]
** DONE Simple configuration
- [X] verify that there is no graphical environment at startup
- [X] password is requested before any connection attempt to the machine
- [X] login with a non-root user
- [X] verify that the password respects the rules imposed by the subject
- [X] with help of evaluator verify that
  - [X] make sure that OS is indeed Debian or Rocky
  - [X] ufw is launched correctly
  - [X] ssh service is launched properly
** DONE User
- [X] a user with the login name of the evaluated person be present on the virtual machine
- [X] verify that the user belongs to the user42 and sudo groups
  - [X] [[id:2a8f7b06-1518-43a5-a072-63403a5d4f14][add a new group]]
  - [X] [[id:5b69c790-b6b5-44e8-b639-116852023e08][usermod]] , [[id:f83d268e-9fc8-42ee-a1c7-5cca096d0b7d][add user to group]]
  - [X] [[id:69d45f6f-6430-4e3f-81db-33747ec8875b][add user to sudo group]]
  - [X] verify (=groups <username>=)
- [X] Ensure the rules imposed in the subject concerning the password policy have been implemented by following the steps below.
  - [X] create a new user ([[id:fb8cc514-3231-44bb-b75f-e68f34ed3c77][useradd]]) and check that [[id:efa45dd1-828a-4fe4-a671-d4821eda00d9][password policy]] has been implemented
  - [X] let the student explain how they implemented the rule
  - [X] ask the evaluated person to create a group named "evaluating" in front of you and assign it to this user
  - [X] Finally, check that this user indeed belongs to the "evaluating" group. ([[id:2a8f7b06-1518-43a5-a072-63403a5d4f14][add a new group]])
  - [X] To finish, ask the evaluated person to explain the purpose of this password policy, as well as the advantages and disadvantages of its implementation. ([[id:83c2bee7-c27e-4685-b323-f16ab7200da5][why do we choose to implement a strong password policy?]])
** DONE [[id:c7a2fa4c-cb32-4af3-bbe4-faa3ed30543f][hostname]] and partitions
- [X] Verify that the hostname of the machine is formatted as follows: login42 (login of the evaluated person).
- [X] Change this hostname by replacing the login with yours, then restart the machine. If upon restarting, the hostname has not been updated, the evaluation stops here.
- [X] You can now restore the original hostname of the machine.
- [X] Ask the evaluated person how to display the partitions of their virtual machine.
- [X] Compare the output with the example given in the subject. Note: if the evaluated person has done the bonuses, you should refer to the example from the bonus part.
- [X] This part is an opportunity to discuss partitions!
  - [X] The evaluated person must give you a brief explanation of how LVM works and why it's beneficial.
** TODO password policy
- [X] check [[id:9195cabf-21d7-42fb-bb12-b20e83f888dc][/etc/shadow]]
- [X] expiration every 30 days
- [X] minimum nbr of days allowed before modification = 2
- [X] user receives a warning message 7 days before their password expires
- [X] min 10 chars long
- [X] must contain uppercase, a lowercase letter and a number
  - [X] number
  - [X] uppercase
  - [X] lowercase
- [X] must not contain more than 3 consecutive identical chars
- [X] must not include the name of the user (gecos check/user check)
- [X] must have at least 7 chars that are not part of the former password
  - this rule can't apply to the root password (no asking for old password)
- [X] root password has to comply with this policy
** TODO Sudo
- [[id:8b70efb6-c0b2-4beb-b9c2-6672cfbe3f70][sudo]]  / [[id:73cae452-a7c0-4a97-8bb7-38d85ec5b83f][sudo group]] / [[id:ec59c6bb-a199-4fc2-8f73-9e2319212005][/etc/sudoers]]
- [X] verify that sudo is installed
  - =which sudo=
- [X] assign new user to the sudo group
- [X] explanations
  - [X] explain the purpose and operation of sudo with examples of their choice
  - [X] demonstrate implementation of the rules
- [X] configure \sudo following strict rules
  - [X] Authentication using \sudo has to be limited to 3 attempts (incorrect password)
  - [X] *custom msg* of your choice if an error due to a wrong pw occurs
  - [X] each action using \sudo has to be archived, both inputs and outputs
    - [X] log file saved in =/var/log/sudo/= folder
  - [X] =TTY mode= has to be enabled for security reasons
  - [X] Paths that can be used by \sudo must be restricted e.g. =/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin=
- [X] Verify that the "/var/log/sudo/" directory exists and contains at least one file. Check the contents of the files in this directory; you should see a history of commands used with sudo.
- [X] Finally, attempt to run a command via sudo.
- [X] Check if the file(s) in the "/var/log/sudo/" directory have been updated.
*** how can I check in a simple way that requiretty for sudo is enforced in my virtualmachine. (But not by looking at /etc/sudoers)

You can test if =requiretty= is enforced by attempting to run a command with =sudo= in a non-interactive shell. Hereâ€™s a simple approach:

1. Use =ssh= to run a command on your local machine as your user (replace =localhost= with your machine's actual hostname if necessary).

   #+begin_src bash
   ssh localhost 'sudo echo This works'
   #+end_src

2. If =requiretty= is enforced, you will get an error message like:

   #+begin_src
   sudo: sorry, you must have a tty to run sudo
   #+end_src

If it executes without an error, then =requiretty= is not enforced for your user. Make sure that =ssh= is configured to allow local connections without passwords, or this check might not work as expected.

** TODO ssh
- [X] Verify that the SSH service is indeed installed on the virtual machine.
- [X] Verify that it is functioning correctly.
  - [X] must be active when you launch your virtual machine
  - [X] shall not be possible to connect using \SSH as root
  - [X] Verify that the SSH service uses only port 4242
    - =sudo ss -tlnp | grep sshd=
     #+begin_src bash
     sudo iptables -L -n | grep 4242
     #+end_src
- [X] The evaluated person must give you a basic explanation of what SSH is and why it's important to use it.
- [X] use SSH to connect with the new user
** TODO ufw
- [X] Verify that the "UFW" (or "Firewalld" for rocky) program is indeed installed on the virtual machine.
- [X] Verify that it is functioning correctly.
- [X] The evaluated person must give you a basic explanation of what UFW (or "Firewalld") is and why it's important to use it.
- [X] List the active rules in UFW (or "Firewalld"). There should be a rule for port 4242.
- [X] Add a new rule to open port 8080. Verify that it has been added by listing the active rules.
- [X] Finally, with the help of the evaluated person, delete this new rule. If something does not work as expected or is not clearly explained, the evaluation stops here.

** script - [[id:b35074bc-77bd-4e23-9f0a-83e706499a6b][monitoring sh]]
[[file:~/workspace/Born2BeRoot/imgs/script_output.png]]

- [X] explain operations of their script (must display their code)
- [X] explain what =cron= is
- [X]  How they have set up their script to execute every 10 minutes from server launch.
  - [X] the evaluated person must make sure that this script executes every minute.
  - [X] You can launch whatever you wish to ensure that the script runs correctly with dynamic values.
  - [X] Finally, the evaluated person must ensure that the script no longer runs at server launch, without modifying the script itself.
    - [X] To verify this point, the server will need to be restarted one last time.
    - [X] At startup, it must be verified that the script still exists in the same place, that its permissions have remained unchanged, and that it has not been modified.
* Bonus
