:PROPERTIES:
:ID:       3d3ea72b-12f0-47cc-9be3-ac0346344019
:END:
#+title: Formatting
#+date: [2024-09-17 Tue 08:28]
#+startup: overview

https://en.wikipedia.org/wiki/Disk_formatting
- preparing a data storage device for inital use
- may also create one or more [[id:e7b6e1e8-e8b5-470a-9994-ebe4cab5a631][file systems]]
- first part is referred to as the "low-level formatting"
- [[id:95012461-8e52-4e4f-8129-d9afa2f293b0][Partitioning]] is common term for the second part of [[id:3d3ea72b-12f0-47cc-9be3-ac0346344019][Formatting]]
- thirst part is referred to as "high-level formatting"
  - creation of a new [[id:e7b6e1e8-e8b5-470a-9994-ebe4cab5a631][file system]]
* High level formatting
:PROPERTIES:
:ID:       c6885adc-f27a-46c7-902c-662632a668b0
:END:
[[https://en.wikipedia.org/wiki/Disk_formatting#High-level_formatting]]
** ChatGPT: what does it mean to write the file system structure to the partition?
- setting up the necessary layout and metadata on the storage device
- In simpler terms, writing the file system structure transforms a blank storage space into an organized system where files can be efficiently stored, retrieved, and managed.
- establishes framework that the operating system will use to store, organize, and retrieve data
- involves:
  - *Boot Sector/Volume Boot Record*:
    - A special area at the beginning of the file system that contains essential data for booting the operating system and identifying the file system type.

  - *Superblock (for some systems like ext4)*:
    - Stores critical information about the file system, like size, status, and metadata layout.

  - *Inode Table/Disk Allocation Table (FAT)*:
    - Inodes (for Unix-based systems) contain metadata about files (such as size, ownership, permissions).
    - FAT (File Allocation Table) maps out where files are stored on the disk.

  - *Directory Structure*:
    - Organizes files into a hierarchical structure with directories (folders) and subdirectories.

  - *Blocks/Clusters*:
    - The disk is divided into fixed-size blocks or clusters where the actual data is stored.
    - The size and management of these blocks can depend on the file system.

  - *Free Space Management*:
    - Keeps track of which blocks or clusters are free and which are in use.
    - Methods like bitmaps or free lists are used.

  - *Journaling (for journaled file systems like ext4 or NTFS)*:
    - Keeps a log of changes made to the file system to help recover from crashes or power failures.

*** Example of Writing the File System Structure:

When you format a partition with the ext4 file system on Linux using:
#+begin_src sh
sudo mkfs.ext4 /dev/sda1
#+end_src

Here's what happens:

1. The command initializes the superblock with metadata about the file system.
2. It sets up inodes to track information about files.
3. It prepares data structures for directories and file storage blocks.
4. It initializes free space management using bitmaps.
5. If it's a journaling file system, it sets up journal structures.

All these steps ensure that the partition is ready to store and manage files effectively.

